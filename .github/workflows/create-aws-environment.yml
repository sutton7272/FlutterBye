name: Create AWS Environment and Deploy

on:
  workflow_dispatch:

jobs:
  setup-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2
        
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build application
      run: npm run build
      
    - name: Check if Elastic Beanstalk application exists
      id: check-app
      run: |
        if aws elasticbeanstalk describe-applications --application-names FlutterBye --region us-east-2 2>/dev/null; then
          echo "app-exists=true" >> $GITHUB_OUTPUT
        else
          echo "app-exists=false" >> $GITHUB_OUTPUT
        fi
        
    - name: Create Elastic Beanstalk application
      if: steps.check-app.outputs.app-exists == 'false'
      run: |
        aws elasticbeanstalk create-application \
          --application-name FlutterBye \
          --description "FlutterBye Web3 Platform" \
          --region us-east-2
          
    - name: Create Elastic Beanstalk environment
      run: |
        aws elasticbeanstalk create-environment \
          --application-name FlutterBye \
          --environment-name FlutterBye-env \
          --solution-stack-name "64bit Amazon Linux 2023 v6.1.6 running Node.js 20" \
          --option-settings \
            Namespace=aws:autoscaling:launchconfiguration,OptionName=InstanceType,Value=t3.micro \
            Namespace=aws:elasticbeanstalk:environment,OptionName=EnvironmentType,Value=SingleInstance \
            Namespace=aws:elasticbeanstalk:application:environment,OptionName=NODE_ENV,Value=production \
            Namespace=aws:elasticbeanstalk:application:environment,OptionName=PORT,Value=8080 \
          --region us-east-2
          
    - name: Wait for environment to be ready
      run: |
        aws elasticbeanstalk wait environment-exists \
          --application-name FlutterBye \
          --environment-names FlutterBye-env \
          --region us-east-2
          
        echo "Waiting for environment to be ready..."
        aws elasticbeanstalk wait environment-updated \
          --application-name FlutterBye \
          --environment-names FlutterBye-env \
          --region us-east-2
      
    - name: Create deployment package
      run: |
        zip -r flutterbye-deployment.zip . \
          -x "*.git*" \
          -x "*node_modules*" \
          -x "*attached_assets*" \
          -x "*.local*" \
          -x "*dist/client*"
      
    - name: Deploy to Elastic Beanstalk
      uses: einaregilsson/beanstalk-deploy@v21
      with:
        aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        application_name: FlutterBye
        environment_name: FlutterBye-env
        region: us-east-2
        version_label: initial-v${{ github.run_number }}
        deployment_package: flutterbye-deployment.zip
        wait_for_deployment: true