events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Security headers
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";

    # Gzip compression
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=static:10m rate=30r/s;

    # Main server block for flutterbye.io
    server {
        listen 80;
        server_name flutterbye.io www.flutterbye.io;
        return 301 https://$server_name$request_uri;
    }

    server {
        listen 443 ssl http2;
        server_name flutterbye.io www.flutterbye.io;

        # SSL configuration
        ssl_certificate /etc/nginx/ssl/flutterbye.io.crt;
        ssl_certificate_key /etc/nginx/ssl/flutterbye.io.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;

        # Root directory for static files
        root /usr/share/nginx/html;
        index index.html;

        # API routes - proxy to backend
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://flutterbye-backend:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # WebSocket support
        location /ws {
            proxy_pass http://flutterbye-backend:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Development environment at /dev
        location /dev {
            alias /usr/share/nginx/html/dev;
            try_files $uri $uri/ /dev/index.html;
        }

        # Static files with caching
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            limit_req zone=static burst=50 nodelay;
            expires 1y;
            add_header Cache-Control "public, immutable";
            try_files $uri =404;
        }

        # HTML files with no caching
        location ~* \.html$ {
            expires 0;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            try_files $uri =404;
        }

        # React routing - serve index.html for all unmatched routes
        location / {
            try_files $uri $uri/ /index.html;
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Block access to sensitive files
        location ~ /\. {
            deny all;
        }

        location ~ /(node_modules|server|\.env) {
            deny all;
        }
    }

    # Development subdomain (alternative to /dev path)
    server {
        listen 443 ssl http2;
        server_name dev.flutterbye.io;

        # Use same SSL certificate
        ssl_certificate /etc/nginx/ssl/flutterbye.io.crt;
        ssl_certificate_key /etc/nginx/ssl/flutterbye.io.key;
        ssl_protocols TLSv1.2 TLSv1.3;

        root /usr/share/nginx/html/dev;
        index index.html;

        # Simplified dev environment - mostly static
        location / {
            try_files $uri $uri/ /index.html;
        }

        # Limited API access for dev
        location /api/health {
            proxy_pass http://flutterbye-backend:3000;
        }
    }
}